{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\ex\\\\demo\\\\exam\\\\src\\\\pages\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../PostList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostList({\n  isLoggedIn\n}) {\n  _s();\n  const navigate = useNavigate();\n  // 임시로 만든 데이터\n  const [posts, setPosts] = useState([{\n    id: 1,\n    title: '글 제목 1',\n    content: '글 내용 1',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 2,\n    title: '글 제목 2',\n    content: '글 내용 2',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 3,\n    title: '글 제목 3',\n    content: '글 내용 3',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 1,\n    title: '글 제목 1',\n    content: '글 내용 1',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 2,\n    title: '글 제목 2',\n    content: '글 내용 2',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 3,\n    title: '글 제목 3',\n    content: '글 내용 3',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 1,\n    title: '글 제목 1',\n    content: '글 내용 1',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 2,\n    title: '글 제목 2',\n    content: '글 내용 2',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 3,\n    title: '글 제목 3',\n    content: '글 내용 3',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 1,\n    title: '글 제목 1',\n    content: '글 내용 1',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 2,\n    title: '글 제목 2',\n    content: '글 내용 2',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 3,\n    title: '글 제목 3',\n    content: '글 내용 3',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 1,\n    title: '글 제목 1',\n    content: '글 내용 1',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 2,\n    title: '글 제목 2',\n    content: '글 내용 2',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 3,\n    title: '글 제목 3',\n    content: '글 내용 3',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }\n  // 필요한 만큼 데이터 추가\n  ]);\n  const itemsPerPage = 10; // 한 페이지에 표시할 게시물 수\n  const [currentPage, setCurrentPage] = useState(1); // 현재 페이지 번호\n\n  const getCurrentTime = () => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0');\n    const day = String(now.getDate()).padStart(2, '0');\n    const hour = String(now.getHours()).padStart(2, '0');\n    const minute = String(now.getMinutes()).padStart(2, '0');\n    const second = String(now.getSeconds()).padStart(2, '0');\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n  };\n\n  // 수정 버튼 클릭 시 실행되는 함수\n  const handleEdit = postId => {\n    if (!isLoggedIn) {\n      alert('로그인 후 이용 가능합니다.');\n      return;\n    }\n    console.log(`게시물 ${postId}를 수정합니다.`);\n    // 여기에 수정 기능을 구현할 수 있습니다.\n  };\n\n  // 삭제 버튼 클릭 시 실행되는 함수\n  const handleDelete = postId => {\n    if (!isLoggedIn) {\n      alert('로그인 후 이용 가능합니다.');\n      return;\n    }\n    console.log(`게시물 ${postId}를 삭제합니다.`);\n    // 여기에 삭제 기능을 구현할 수 있습니다.\n  };\n\n  // 추천 버튼 클릭 시 실행되는 함수\n  const handleRecommend = postId => {\n    if (!isLoggedIn) {\n      alert('로그인 후 이용 가능합니다.');\n      return;\n    }\n    setPosts(prevPosts => prevPosts.map(post => {\n      if (post.id === postId) {\n        return {\n          ...post,\n          likes: post.likes + 1\n        };\n      }\n      return post;\n    }));\n  };\n\n  // 비추천 버튼 클릭 시 실행되는 함수\n  const handleUnrecommend = postId => {\n    if (!isLoggedIn) {\n      alert('로그인 후 이용 가능합니다.');\n      return;\n    }\n    setPosts(prevPosts => prevPosts.map(post => {\n      if (post.id === postId) {\n        return {\n          ...post,\n          dislikes: post.dislikes + 1\n        };\n      }\n      return post;\n    }));\n  };\n  useEffect(() => {\n    // URL에서 페이지 번호 가져오기\n    const searchParams = new URLSearchParams(window.location.search);\n    const pageParam = searchParams.get('page');\n    const parsedPage = parseInt(pageParam);\n\n    // 페이지 번호가 유효한지 확인하고, 현재 페이지로 설정\n    if (!isNaN(parsedPage) && parsedPage >= 1 && parsedPage <= Math.ceil(posts.length / itemsPerPage)) {\n      setCurrentPage(parsedPage);\n    } else {\n      // 잘못된 페이지 번호면 첫 페이지로 이동\n      navigate(`?page=1`);\n    }\n  }, [posts.length, itemsPerPage, navigate]);\n\n  // 페이지 변경 함수\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n    navigate(`?page=${pageNumber}`);\n  };\n\n  // 현재 페이지에 해당하는 게시물 가져오기\n  const indexOfLastPost = currentPage * itemsPerPage;\n  const indexOfFirstPost = indexOfLastPost - itemsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // 페이지 번호 목록 생성\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(posts.length / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uAC8C\\uC2DC\\uAE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"post_title\",\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"post_cont\",\n            children: \"\\uB0B4\\uC6A9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC791\\uC131\\uC790\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC791\\uC131\\uB0A0\\uC9DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC218\\uC815/\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uCD94\\uCC9C/\\uBE44\\uCD94\\uCC9C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentPosts.map(post => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"Center\",\n            children: post.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/detail/${post.id}`,\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/detail/${post.id}`,\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"Center\",\n            children: post.writer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"Center\",\n            children: getCurrentTime()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"Center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(post.id),\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(post.id),\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"Center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRecommend(post.id),\n              children: \"\\uCD94\\uCC9C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), \" \\uD83D\\uDC4D \", post.likes, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUnrecommend(post.id),\n              children: \"\\uBE44\\uCD94\\uCC9C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), \" \\uD83D\\uDC4E \", post.dislikes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Pagination\",\n      children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(number),\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"XU7lhXXuqgmxz1FDoLbO7y0zANY=\", false, function () {\n  return [useNavigate];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","PostList","isLoggedIn","_s","navigate","posts","setPosts","id","title","content","writer","date","likes","dislikes","itemsPerPage","currentPage","setCurrentPage","getCurrentTime","now","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","handleEdit","postId","alert","console","log","handleDelete","handleRecommend","prevPosts","map","post","handleUnrecommend","searchParams","URLSearchParams","window","location","search","pageParam","get","parsedPage","parseInt","isNaN","Math","ceil","length","handlePageChange","pageNumber","indexOfLastPost","indexOfFirstPost","currentPosts","slice","pageNumbers","i","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","number","_c","$RefreshReg$"],"sources":["C:/Users/user/ex/demo/exam/src/pages/PostList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../PostList.css';\r\n\r\nfunction PostList({ isLoggedIn }) {\r\n  const navigate = useNavigate();\r\n  // 임시로 만든 데이터\r\n  const [posts, setPosts] = useState([\r\n    { id: 1, title: '글 제목 1', content: '글 내용 1', writer:'홍길동', date:'', likes: 0, dislikes: 0 },\r\n    { id: 2, title: '글 제목 2', content: '글 내용 2', writer:'홍길동', date:'', likes: 0, dislikes: 0 },\r\n    { id: 3, title: '글 제목 3', content: '글 내용 3', writer:'홍길동', date:'', likes: 0, dislikes: 0 },    { id: 1, title: '글 제목 1', content: '글 내용 1', writer:'홍길동', date:'', likes: 0, dislikes: 0 },\r\n    { id: 2, title: '글 제목 2', content: '글 내용 2', writer:'홍길동', date:'', likes: 0, dislikes: 0 },\r\n    { id: 3, title: '글 제목 3', content: '글 내용 3', writer:'홍길동', date:'', likes: 0, dislikes: 0 },    { id: 1, title: '글 제목 1', content: '글 내용 1', writer:'홍길동', date:'', likes: 0, dislikes: 0 },\r\n    { id: 2, title: '글 제목 2', content: '글 내용 2', writer:'홍길동', date:'', likes: 0, dislikes: 0 },\r\n    { id: 3, title: '글 제목 3', content: '글 내용 3', writer:'홍길동', date:'', likes: 0, dislikes: 0 },    { id: 1, title: '글 제목 1', content: '글 내용 1', writer:'홍길동', date:'', likes: 0, dislikes: 0 },\r\n    { id: 2, title: '글 제목 2', content: '글 내용 2', writer:'홍길동', date:'', likes: 0, dislikes: 0 },\r\n    { id: 3, title: '글 제목 3', content: '글 내용 3', writer:'홍길동', date:'', likes: 0, dislikes: 0 },    { id: 1, title: '글 제목 1', content: '글 내용 1', writer:'홍길동', date:'', likes: 0, dislikes: 0 },\r\n    { id: 2, title: '글 제목 2', content: '글 내용 2', writer:'홍길동', date:'', likes: 0, dislikes: 0 },\r\n    { id: 3, title: '글 제목 3', content: '글 내용 3', writer:'홍길동', date:'', likes: 0, dislikes: 0 }\r\n    // 필요한 만큼 데이터 추가\r\n  ]);\r\n  \r\n  const itemsPerPage = 10; // 한 페이지에 표시할 게시물 수\r\n  const [currentPage, setCurrentPage] = useState(1); // 현재 페이지 번호\r\n\r\n  const getCurrentTime = () => {\r\n    const now = new Date();\r\n    const year = now.getFullYear();\r\n    const month = String(now.getMonth() + 1).padStart(2, '0');\r\n    const day = String(now.getDate()).padStart(2, '0');\r\n    const hour = String(now.getHours()).padStart(2, '0');\r\n    const minute = String(now.getMinutes()).padStart(2, '0');\r\n    const second = String(now.getSeconds()).padStart(2, '0');\r\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\r\n  };\r\n\r\n  // 수정 버튼 클릭 시 실행되는 함수\r\n  const handleEdit = (postId) => {\r\n    if (!isLoggedIn) {\r\n      alert('로그인 후 이용 가능합니다.');\r\n      return;\r\n    }\r\n    console.log(`게시물 ${postId}를 수정합니다.`);\r\n    // 여기에 수정 기능을 구현할 수 있습니다.\r\n  };\r\n\r\n  // 삭제 버튼 클릭 시 실행되는 함수\r\n  const handleDelete = (postId) => {\r\n    if (!isLoggedIn) {\r\n      alert('로그인 후 이용 가능합니다.');\r\n      return;\r\n    }\r\n    console.log(`게시물 ${postId}를 삭제합니다.`);\r\n    // 여기에 삭제 기능을 구현할 수 있습니다.\r\n  };\r\n\r\n  // 추천 버튼 클릭 시 실행되는 함수\r\n  const handleRecommend = (postId) => {\r\n    if (!isLoggedIn) {\r\n      alert('로그인 후 이용 가능합니다.');\r\n      return;\r\n    }\r\n    setPosts(prevPosts => prevPosts.map(post => {\r\n      if (post.id === postId) {\r\n        return { ...post, likes: post.likes + 1 };\r\n      }\r\n      return post;\r\n    }));\r\n  };\r\n\r\n  // 비추천 버튼 클릭 시 실행되는 함수\r\n  const handleUnrecommend = (postId) => {\r\n    if (!isLoggedIn) {\r\n      alert('로그인 후 이용 가능합니다.');\r\n      return;\r\n    }\r\n    setPosts(prevPosts => prevPosts.map(post => {\r\n      if (post.id === postId) {\r\n        return { ...post, dislikes: post.dislikes + 1 };\r\n      }\r\n      return post;\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    // URL에서 페이지 번호 가져오기\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const pageParam = searchParams.get('page');\r\n    const parsedPage = parseInt(pageParam);\r\n\r\n     // 페이지 번호가 유효한지 확인하고, 현재 페이지로 설정\r\n     if (!isNaN(parsedPage) && parsedPage >= 1 && parsedPage <= Math.ceil(posts.length / itemsPerPage)) {\r\n      setCurrentPage(parsedPage);\r\n    } else {\r\n      // 잘못된 페이지 번호면 첫 페이지로 이동\r\n      navigate(`?page=1`);\r\n    }\r\n  }, [posts.length, itemsPerPage, navigate]);\r\n\r\n  // 페이지 변경 함수\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n    navigate(`?page=${pageNumber}`);\r\n  };\r\n\r\n\r\n  // 현재 페이지에 해당하는 게시물 가져오기\r\n  const indexOfLastPost = currentPage * itemsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - itemsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  // 페이지 번호 목록 생성\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(posts.length / itemsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"PostList\">\r\n      <div><h1>게시글</h1></div> \r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th className=\"post_title\">제목</th>\r\n            <th className=\"post_cont\">내용</th>\r\n            <th>작성자</th>\r\n            <th>작성날짜</th>\r\n            <th>수정/삭제</th>\r\n            <th>추천/비추천</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* 현재 페이지에 해당하는 게시물 표시 */}\r\n          {currentPosts.map(post => (\r\n            <tr key={post.id}>\r\n              <td className=\"Center\">{post.id}</td>\r\n              <td><Link to={`/detail/${post.id}`}>{post.title}</Link></td>\r\n              <td><Link to={`/detail/${post.id}`}>{post.content}</Link></td>\r\n              <td className=\"Center\">{post.writer}</td>\r\n              <td className=\"Center\">{getCurrentTime()}</td>\r\n              <td className=\"Center\">\r\n                <button onClick={() => handleEdit(post.id)}>수정</button>\r\n                <button onClick={() => handleDelete(post.id)}>삭제</button>\r\n              </td>\r\n              <td className=\"Center\">\r\n                <button onClick={() => handleRecommend(post.id)}>추천</button> 👍 {post.likes}\r\n                <button onClick={() => handleUnrecommend(post.id)}>비추천</button> 👎 {post.dislikes}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {/* 페이지 번호 목록 표시 */}\r\n      <div className=\"Pagination\">\r\n        {pageNumbers.map(number => (\r\n          <button key={number} onClick={() => handlePageChange(number)}>\r\n            {number}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}