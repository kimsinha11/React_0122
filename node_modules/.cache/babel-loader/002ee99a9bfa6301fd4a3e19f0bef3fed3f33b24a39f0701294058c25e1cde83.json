{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\ex\\\\demo\\\\demo\\\\src\\\\pages\\\\Detail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport '../Detail.css'; // 수정: 파일 경로를 정확히 지정해주세요.\nimport Comment from './Comment'; // Comment 컴포넌트를 import .\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Detail() {\n  _s();\n  // useParams 훅을 사용하여 URL에서 게시물 ID를 추출합니다.\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const goToPostList = () => {\n    navigate('/postlist');\n  };\n\n  // 임시로 만든 예시 데이터를 가져옵니다.\n  const [posts, setPosts] = useState([{\n    id: 1,\n    title: '글 제목 1',\n    content: '글 내용 1',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 2,\n    title: '글 제목 2',\n    content: '글 내용 2',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }, {\n    id: 3,\n    title: '글 제목 3',\n    content: '글 내용 3',\n    writer: '홍길동',\n    date: '',\n    likes: 0,\n    dislikes: 0\n  }\n  // 필요한 만큼 데이터 추가\n  ]);\n  useEffect(() => {\n    // 현재 날짜를 생성합니다.\n    const getCurrentTime = () => {\n      const now = new Date();\n      const year = now.getFullYear();\n      const month = String(now.getMonth() + 1).padStart(2, '0');\n      const day = String(now.getDate()).padStart(2, '0');\n      const hour = String(now.getHours()).padStart(2, '0');\n      const minute = String(now.getMinutes()).padStart(2, '0');\n      const second = String(now.getSeconds()).padStart(2, '0');\n      return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n    };\n\n    // 게시물 데이터를 업데이트합니다.\n    const updatedPosts = posts.map(post => ({\n      ...post,\n      date: getCurrentTime()\n    }));\n    setPosts(updatedPosts);\n  }, []); // 이 부분은 한 번만 실행되어야 하므로 의존성 배열이 비어 있습니다.\n\n  // 선택된 게시물을 찾습니다.\n  const selectedPost = posts.find(post => post.id === parseInt(id));\n\n  // 선택된 게시물이 없다면 에러 메시지를 표시합니다.\n  if (!selectedPost) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD574\\uB2F9 \\uAC8C\\uC2DC\\uBB3C\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Detail\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAC8C\\uC2DC\\uBB3C \\uC0C1\\uC138 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", selectedPost.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC81C\\uBAA9: \", selectedPost.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB0B4\\uC6A9: \", selectedPost.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC791\\uC131\\uC790: \", selectedPost.writer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC791\\uC131\\uB0A0\\uC9DC: \", selectedPost.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ButtonContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPostList,\n        children: \"\\uB4A4\\uB85C\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Comment\",\n      children: /*#__PURE__*/_jsxDEV(Comment, {\n        postId: selectedPost.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Detail, \"hq+tQdeJ+A1Y9VsGvDUGkbV6cCs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Comment","jsxDEV","_jsxDEV","Detail","_s","id","navigate","goToPostList","posts","setPosts","title","content","writer","date","likes","dislikes","getCurrentTime","now","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","updatedPosts","map","post","selectedPost","find","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","postId","_c","$RefreshReg$"],"sources":["C:/Users/user/ex/demo/demo/src/pages/Detail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../Detail.css'; // 수정: 파일 경로를 정확히 지정해주세요.\r\nimport Comment from './Comment'; // Comment 컴포넌트를 import .\r\n\r\nfunction Detail() {\r\n  // useParams 훅을 사용하여 URL에서 게시물 ID를 추출합니다.\r\n  const { id } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const goToPostList = () => {\r\n    navigate('/postlist');\r\n  };\r\n\r\n  // 임시로 만든 예시 데이터를 가져옵니다.\r\n  const [posts, setPosts] = useState([\r\n    { id: 1, title: '글 제목 1', content: '글 내용 1', writer:'홍길동', date:'', likes: 0, dislikes: 0 },\r\n    { id: 2, title: '글 제목 2', content: '글 내용 2', writer:'홍길동', date:'', likes: 0, dislikes: 0 },\r\n    { id: 3, title: '글 제목 3', content: '글 내용 3', writer:'홍길동', date:'', likes: 0, dislikes: 0 },\r\n    // 필요한 만큼 데이터 추가\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // 현재 날짜를 생성합니다.\r\n    const getCurrentTime = () => {\r\n      const now = new Date();\r\n      const year = now.getFullYear();\r\n      const month = String(now.getMonth() + 1).padStart(2, '0');\r\n      const day = String(now.getDate()).padStart(2, '0');\r\n      const hour = String(now.getHours()).padStart(2, '0');\r\n      const minute = String(now.getMinutes()).padStart(2, '0');\r\n      const second = String(now.getSeconds()).padStart(2, '0');\r\n      return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\r\n    };\r\n\r\n    // 게시물 데이터를 업데이트합니다.\r\n    const updatedPosts = posts.map(post => ({ ...post, date: getCurrentTime() }));\r\n    setPosts(updatedPosts);\r\n  }, []); // 이 부분은 한 번만 실행되어야 하므로 의존성 배열이 비어 있습니다.\r\n\r\n  // 선택된 게시물을 찾습니다.\r\n  const selectedPost = posts.find(post => post.id === parseInt(id));\r\n\r\n  // 선택된 게시물이 없다면 에러 메시지를 표시합니다.\r\n  if (!selectedPost) {\r\n    return <div>해당 게시물을 찾을 수 없습니다.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Detail\"> {/* 수정: 클래스를 적용할 요소에 className 속성을 추가합니다. */}\r\n      <h2>게시물 상세 페이지</h2>\r\n      <div className=\"Main\">\r\n        <p>ID: {selectedPost.id}</p>\r\n        <p>제목: {selectedPost.title}</p>\r\n        <p>내용: {selectedPost.content}</p>\r\n        <p>작성자: {selectedPost.writer}</p>\r\n        <p>작성날짜: {selectedPost.date}</p>\r\n      </div>\r\n      <div className=\"ButtonContainer\">\r\n        <button onClick={goToPostList}>뒤로가기</button>\r\n      </div>\r\n      <div className=\"Comment\">\r\n        <Comment postId={selectedPost.id} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}