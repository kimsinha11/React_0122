{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\ex\\\\demo\\\\exam\\\\src\\\\pages\\\\Detail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../Detail.css'; // 수정: 파일 경로를 정확히 지정해주세요.\n\n// 댓글을 달기 위한 컴포넌트를 생성합니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentButton() {\n  // 댓글 버튼을 누를 때 실행되는 함수\n  const handleComment = () => {\n    console.log(\"댓글을 달기 위한 기능을 구현합니다.\");\n    // 댓글을 달기 위한 기능을 추가할 수 있습니다.\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleComment,\n    children: \"\\uB313\\uAE00 \\uB2EC\\uAE30\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = CommentButton;\nfunction Detail() {\n  _s();\n  // useParams 훅을 사용하여 URL에서 게시물 ID를 추출합니다.\n  const {\n    id\n  } = useParams();\n\n  // 임시로 만든 예시 데이터를 가져옵니다.\n  const posts = [{\n    id: 1,\n    title: '글 제목 1',\n    content: '글 내용 1',\n    writer: '홍길동',\n    date: ''\n  }, {\n    id: 2,\n    title: '글 제목 2',\n    content: '글 내용 2',\n    writer: '홍길동',\n    date: ''\n  }, {\n    id: 3,\n    title: '글 제목 3',\n    content: '글 내용 3',\n    writer: '홍길동',\n    date: ''\n  }\n  // 필요한 만큼 데이터 추가\n  ];\n  const getCurrentTime = () => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0');\n    const day = String(now.getDate()).padStart(2, '0');\n    const hour = String(now.getHours()).padStart(2, '0');\n    const minute = String(now.getMinutes()).padStart(2, '0');\n    const second = String(now.getSeconds()).padStart(2, '0');\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n  };\n\n  // 해당 ID에 맞는 게시물을 찾습니다.\n  const selectedPost = posts.find(post => post.id === parseInt(id));\n\n  // 선택된 게시물이 없다면 에러 메시지를 표시합니다.\n  if (!selectedPost) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD574\\uB2F9 \\uAC8C\\uC2DC\\uBB3C\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Detail\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uAC8C\\uC2DC\\uBB3C \\uC0C1\\uC138 \\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", selectedPost.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC81C\\uBAA9: \", selectedPost.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB0B4\\uC6A9: \", selectedPost.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC791\\uC131\\uC790: \", selectedPost.writer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC791\\uC131\\uB0A0\\uC9DC: \", getCurrentTime()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Detail, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c2 = Detail;\nexport default Detail;\nvar _c, _c2;\n$RefreshReg$(_c, \"CommentButton\");\n$RefreshReg$(_c2, \"Detail\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","CommentButton","handleComment","console","log","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Detail","_s","id","posts","title","content","writer","date","getCurrentTime","now","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","selectedPost","find","post","parseInt","className","_c2","$RefreshReg$"],"sources":["C:/Users/user/ex/demo/exam/src/pages/Detail.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../Detail.css'; // 수정: 파일 경로를 정확히 지정해주세요.\r\n\r\n// 댓글을 달기 위한 컴포넌트를 생성합니다.\r\nfunction CommentButton() {\r\n  // 댓글 버튼을 누를 때 실행되는 함수\r\n  const handleComment = () => {\r\n    console.log(\"댓글을 달기 위한 기능을 구현합니다.\");\r\n    // 댓글을 달기 위한 기능을 추가할 수 있습니다.\r\n  };\r\n\r\n  return (\r\n    <button onClick={handleComment}>댓글 달기</button>\r\n  );\r\n}\r\n\r\nfunction Detail() {\r\n  // useParams 훅을 사용하여 URL에서 게시물 ID를 추출합니다.\r\n  const { id } = useParams();\r\n\r\n  // 임시로 만든 예시 데이터를 가져옵니다.\r\n  const posts = [\r\n    { id: 1, title: '글 제목 1', content: '글 내용 1', writer:'홍길동', date:'' },\r\n    { id: 2, title: '글 제목 2', content: '글 내용 2', writer:'홍길동', date:'' },\r\n    { id: 3, title: '글 제목 3', content: '글 내용 3', writer:'홍길동', date:'' },\r\n    // 필요한 만큼 데이터 추가\r\n  ];\r\n\r\n  const getCurrentTime = () => {\r\n    const now = new Date();\r\n    const year = now.getFullYear();\r\n    const month = String(now.getMonth() + 1).padStart(2, '0');\r\n    const day = String(now.getDate()).padStart(2, '0');\r\n    const hour = String(now.getHours()).padStart(2, '0');\r\n    const minute = String(now.getMinutes()).padStart(2, '0');\r\n    const second = String(now.getSeconds()).padStart(2, '0');\r\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\r\n  };\r\n\r\n  // 해당 ID에 맞는 게시물을 찾습니다.\r\n  const selectedPost = posts.find(post => post.id === parseInt(id));\r\n\r\n  // 선택된 게시물이 없다면 에러 메시지를 표시합니다.\r\n  if (!selectedPost) {\r\n    return <div>해당 게시물을 찾을 수 없습니다.</div>;\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"Detail\"> {/* 수정: 클래스를 적용할 요소에 className 속성을 추가합니다. */}\r\n        <div className=\"Main\">\r\n<h2>게시물 상세 페이지</h2>\r\n<p>ID: {selectedPost.id}</p>\r\n      <p>제목: {selectedPost.title}</p>\r\n      <p>내용: {selectedPost.content}</p>\r\n      <p>작성자: {selectedPost.writer}</p>\r\n      <p>작성날짜: {getCurrentTime()}</p></div>\r\n      \r\n      {/* 이곳에 해당 게시물의 상세 내용을 표시하는 코드를 추가하세요 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,eAAe,CAAC,CAAC;;AAExB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,aAAaA,CAAA,EAAG;EACvB;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC;EACF,CAAC;EAED,oBACEJ,OAAA;IAAQK,OAAO,EAAEH,aAAc;IAAAI,QAAA,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAElD;AAACC,EAAA,GAVQV,aAAa;AAYtB,SAASW,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB;EACA,MAAM;IAAEC;EAAG,CAAC,GAAGhB,SAAS,CAAC,CAAC;;EAE1B;EACA,MAAMiB,KAAK,GAAG,CACZ;IAAED,EAAE,EAAE,CAAC;IAAEE,KAAK,EAAE,QAAQ;IAAEC,OAAO,EAAE,QAAQ;IAAEC,MAAM,EAAC,KAAK;IAAEC,IAAI,EAAC;EAAG,CAAC,EACpE;IAAEL,EAAE,EAAE,CAAC;IAAEE,KAAK,EAAE,QAAQ;IAAEC,OAAO,EAAE,QAAQ;IAAEC,MAAM,EAAC,KAAK;IAAEC,IAAI,EAAC;EAAG,CAAC,EACpE;IAAEL,EAAE,EAAE,CAAC;IAAEE,KAAK,EAAE,QAAQ;IAAEC,OAAO,EAAE,QAAQ;IAAEC,MAAM,EAAC,KAAK;IAAEC,IAAI,EAAC;EAAG;EACnE;EAAA,CACD;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,IAAI,GAAGF,GAAG,CAACG,WAAW,CAAC,CAAC;IAC9B,MAAMC,KAAK,GAAGC,MAAM,CAACL,GAAG,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACzD,MAAMC,GAAG,GAAGH,MAAM,CAACL,GAAG,CAACS,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAClD,MAAMG,IAAI,GAAGL,MAAM,CAACL,GAAG,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACpD,MAAMK,MAAM,GAAGP,MAAM,CAACL,GAAG,CAACa,UAAU,CAAC,CAAC,CAAC,CAACN,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACxD,MAAMO,MAAM,GAAGT,MAAM,CAACL,GAAG,CAACe,UAAU,CAAC,CAAC,CAAC,CAACR,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACxD,OAAQ,GAAEL,IAAK,IAAGE,KAAM,IAAGI,GAAI,IAAGE,IAAK,IAAGE,MAAO,IAAGE,MAAO,EAAC;EAC9D,CAAC;;EAED;EACA,MAAME,YAAY,GAAGtB,KAAK,CAACuB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACzB,EAAE,KAAK0B,QAAQ,CAAC1B,EAAE,CAAC,CAAC;;EAEjE;EACA,IAAI,CAACuB,YAAY,EAAE;IACjB,oBAAOrC,OAAA;MAAAM,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;EAEA,oBAEEV,OAAA;IAAKyC,SAAS,EAAC,QAAQ;IAAAnC,QAAA,GAAC,GAAC,eACrBN,OAAA;MAAKyC,SAAS,EAAC,MAAM;MAAAnC,QAAA,gBAC7BN,OAAA;QAAAM,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBV,OAAA;QAAAM,QAAA,GAAG,MAAI,EAAC+B,YAAY,CAACvB,EAAE;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBV,OAAA;QAAAM,QAAA,GAAG,gBAAI,EAAC+B,YAAY,CAACrB,KAAK;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BV,OAAA;QAAAM,QAAA,GAAG,gBAAI,EAAC+B,YAAY,CAACpB,OAAO;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjCV,OAAA;QAAAM,QAAA,GAAG,sBAAK,EAAC+B,YAAY,CAACnB,MAAM;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjCV,OAAA;QAAAM,QAAA,GAAG,4BAAM,EAACc,cAAc,CAAC,CAAC;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGlC,CAAC;AAEV;AAACG,EAAA,CA7CQD,MAAM;EAAA,QAEEd,SAAS;AAAA;AAAA4C,GAAA,GAFjB9B,MAAM;AA+Cf,eAAeA,MAAM;AAAC,IAAAD,EAAA,EAAA+B,GAAA;AAAAC,YAAA,CAAAhC,EAAA;AAAAgC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}