{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\ex\\\\demo\\\\exam\\\\src\\\\pages\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact({\n  isLoggedIn,\n  onLogout\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // 서버로부터 글 목록을 가져오는 API 요청\n    axios.get('/api/posts').then(response => {\n      // API 요청이 성공했을 때 받은 데이터를 상태에 저장\n      setPosts(response.data);\n    }).catch(error => {\n      console.error('글 목록을 불러오는데 실패했습니다:', error);\n    });\n  }, []); // 컴포넌트가 마운트될 때 한 번만 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact \\uD654\\uBA74\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: post.title\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Contact, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Contact","isLoggedIn","onLogout","_s","posts","setPosts","get","then","response","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","id","_c","$RefreshReg$"],"sources":["C:/Users/user/ex/demo/exam/src/pages/Contact.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Contact({ isLoggedIn, onLogout }) {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 서버로부터 글 목록을 가져오는 API 요청\r\n    axios.get('/api/posts')\r\n      .then(response => {\r\n        // API 요청이 성공했을 때 받은 데이터를 상태에 저장\r\n        setPosts(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('글 목록을 불러오는데 실패했습니다:', error);\r\n      });\r\n  }, []); // 컴포넌트가 마운트될 때 한 번만 실행\r\n\r\n  return (\r\n    <div className=\"Contact\">\r\n      <h1>Contact 화면입니다.</h1>\r\n      <ul>\r\n        {/* 글 목록을 반복하여 화면에 표시 */}\r\n        {posts.map(post => (\r\n          <li key={post.id}>{post.title}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAC;EAAEC,UAAU;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACS,GAAG,CAAC,YAAY,CAAC,CACpBC,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAH,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEZ,OAAA;IAAKc,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBf,OAAA;MAAAe,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBnB,OAAA;MAAAe,QAAA,EAEGV,KAAK,CAACe,GAAG,CAACC,IAAI,iBACbrB,OAAA;QAAAe,QAAA,EAAmBM,IAAI,CAACC;MAAK,GAApBD,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACf,EAAA,CA1BQH,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AA4BhB,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}